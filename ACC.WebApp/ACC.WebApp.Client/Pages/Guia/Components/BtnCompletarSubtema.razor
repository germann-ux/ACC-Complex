@rendermode InteractiveServer
@inject AuthenticationStateProvider AuthProvider
@inject ProgresoUsuarioClient ProgresoService

<button class="biblioteca-btn-completar-subtema" @onclick:stopPropagation @onclick="MarcarComoCompletado" disabled="@completado">
    @(completado ? "Subtema completado ✓" : "Completar")
</button>

@*<i class="fa-solid fa-circle-check"></i>*@

@if (mensaje != null)
{
    <span class="biblioteca-mensaje-completado">@mensaje</span>
}

@code {
    [Parameter] public int SubTemaId { get; set; }

    private bool completado = false;
    private bool EstadoSubtema;
    private string? mensaje;

    private async Task MarcarComoCompletado()
    {
        var auth = await AuthProvider.GetAuthenticationStateAsync();
        var userId = auth.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;

        if (!string.IsNullOrEmpty(userId))
        {
            var ok = await ProgresoService.MarcarSubtemaComoCompletadoAsync(userId, SubTemaId);
            completado = ok;
            mensaje = ok ? "¡Subtema guardado exitosamente!" : "No se pudo marcar como completado.";
        }
        else
        {
            mensaje = "Usuario no autenticado.";
        }
    }
}