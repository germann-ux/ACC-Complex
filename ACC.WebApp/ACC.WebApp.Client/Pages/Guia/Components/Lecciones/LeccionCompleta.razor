@rendermode InteractiveServer
@using ACC.Shared.DTOs;
@using ACC.WebApp.Client.Pages.ACC_Compiler;
@using ACC.WebApp.Client.Pages.Guia.Modals;

@code {
    [Parameter] public LeccionDto Leccion { get; set; } = default!;
    private ModalActividades? ModalActividad;
    private string? urlActividadActual;

    private void ShowActivity(string url)
    {
        urlActividadActual = url;
        ModalActividad?.OpenModal();
    }
}

@* Renderiza el modal una sola vez, fuera del bucle *@
<ModalActividades Url="@urlActividadActual" @ref="ModalActividad" />
<div class="leccion-container">
    @foreach (var seccion in Leccion.OrdenSecciones)
    {
        switch (seccion)
        {
            case "html":
                <div class="contenido-html">@((MarkupString)Leccion.HtmlBody)</div>
                break;

            case "actividad":
                if (Leccion.TieneActividad && !string.IsNullOrEmpty(Leccion.UrlActividad))
                {
                    <button class="expand-btn" @onclick="() => ShowActivity(Leccion.UrlActividad!)">
                        Ver actividad interactiva
                    </button>
                }
                break;

            case "compilador":
                if (Leccion.TieneCompilador)
                {
                    <CompiladorACC />
                }
                break;

            case "evaluacion":
                if (Leccion.TieneEvaluacion && Leccion.IdEvaluacion.HasValue)
                {
                    // IMPLEMENTAR LAS PREGUNTAS DE EVALUACION ---> sencillas
                }
                break;

            default:
                <p style="color:red">[Sección desconocida: @seccion]</p>
                break;
        }
    }
</div>
